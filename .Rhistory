data.frame()
df <- data.frame(Date=as.Date(character()),
Price=double())
for (n in 1:10){
Time <- actualTime - 3600*numberofpoint*n
link5 <- paste("https://min-api.cryptocompare.com/data/histohour?fsym=",cripto, "&tsym=", priceToCompare,"&limit=", numberofpoint, "&aggregate=1&toTs=",Time, "&extraParams=your_app_name", sep = "")
data5 <- fromJSON(link5)
df2 <- data.frame("Date" =as.POSIXct(data5$Data$time,origin = "1970-01-01",tz = "GMT"), "Price" = data5$Data$Price )
df <- rbind(df, df2)
}
actualTime <- round(as.numeric(Sys.time()))
numberofpoint <- 2000
cripto <- "BTC"
priceToCompare <- "USD"
link2 <- paste("https://min-api.cryptocompare.com/data/histohour?fsym=",cripto, "&tsym=", priceToCompare,"&limit=", numberofpoint, "&aggregate=1&toTs=",actualTime, "&extraParams=your_app_name", sep = "")
data2 <- fromJSON(link2)
x2 = as.POSIXct(data2$Data$time,origin = "1970-01-01",tz = "GMT")
data2 <- data.frame("time" = x2, "price" = data2$Data$open)
g1 <- ggplot(data2) + aes(x = time, y = price) + geom_line()
g1
actualTime <- round(as.numeric(Sys.time()))
numberofpoint <- 200
cripto <- "ETH"
priceToCompare <- "USD"
platform = "Binance"
link4 <- paste("https://min-api.cryptocompare.com/data/exchange/histohour?e=", platform, "&tsym=", cripto, "&limit=", numberofpoint, "&aggregate=1&toTs=", actualTime, "&extraParams=your_app_name", sep = "")
data4 <- fromJSON(link4)
x4 = as.POSIXct(data4$Data$time,origin = "1970-01-01",tz = "GMT")
data4 <- data.frame("Time" = x4, "Volume" = data4$Data$volume)
g4 <- ggplot(data4) + aes(x = Time, y = Volume) + geom_line()
g4
View(data4)
View(data5)
priceClose = double(),
Volume()
)
lastDay <- as.Date(firstDay,format="%dd/%mm/%YYYY")
crytocurrency_dataframe <- function(timeframe, firstDay, lastDay, crytocurrenty = "BTC", comparison = "USD") {
# Initialitaion of the data frame with alll the desired output
df <- data.frame(
Date=as.Date(character()),
priceHighest=double(),
priceLowest = double(),
priceOpen = double(),
priceClose = double(),
Volume()
)
# Date
firstDay <- as.Date(firstDay,format="%dd/%mm/%YYYY")
lastDay <- as.Date(firstDay,format="%dd/%mm/%YYYY")
time <- round(as.numeric(firstDay))
# Number of points of hour dataframe
n <- as.numeric(lastDay-firstDay)
if (timeframe == "Day"){
a <- "histoday"
}
else if(timeframe == "Minute"){
a <- "hitominute"
n <- round(n/3600)
}
else if (timeframe == "Hour") {
a <- "hitohour"
n <- round(n/60)
}
else {
print('Valor no válido')
return();
}
# Maximum number of points is 2000
if (n <= 2000) {
link <- paste("https://min-api.cryptocompare.com/data/", a,"?fsym=",crytocurrenty, "&tsym=", comparison,"&limit=", n, "&aggregate=1&toTs=",time, "&extraParams=your_app_name", sep = "")
data <- fromJSON(link)
df <- data.frame(
Date= as.POSIXct(data3Data$time,origin = "1970-01-01",tz = "GMT"),
priceHighest=data$Data$high,
priceLowest = data$Data$low,
priceOpen = data$Data$open,
priceClose = data$Data$close
)
}
# If the number of points is higher than the maximum we need to do a for loop
else {
# for (n in 1:10){
#
# Time <- actualTime - 3600*numberofpoint*n
# link5 <- paste("https://min-api.cryptocompare.com/data/histohour?fsym=",cripto, "&tsym=", priceToCompare,"&limit=", numberofpoint, "&aggregate=1&toTs=",Time, "&extraParams=your_app_name", sep = "")
# data5 <- fromJSON(link5)
#
# df2 <- data.frame("Date" =as.POSIXct(data5$Data$time,origin = "1970-01-01",tz = "GMT"), "Price" = data5$Data$Price )
# df <- rbind(df, df2)
# }
}
return(df)
}
debugSource('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
a <-  crytocurrency_dataframe("day·)
a <-  crytocurrency_dataframe("day", "01/11/2018", "23/11/2018")
crytocurrency_dataframe <- function(timeframe, firstDay, lastDay, crytocurrenty = "BTC", comparison = "USD") {
# Initialitaion of the data frame with alll the desired output
df <- data.frame(
Date=as.Date(character()),
priceHighest=double(),
priceLowest = double(),
priceOpen = double(),
priceClose = double(),
)
# Date
firstDay <- as.Date(firstDay,format="%dd/%mm/%YYYY")
lastDay <- as.Date(firstDay,format="%dd/%mm/%YYYY")
time <- round(as.numeric(firstDay))
# Number of points of hour dataframe
n <- as.numeric(lastDay-firstDay)
if (timeframe == "Day"){
a <- "histoday"
}
else if(timeframe == "Minute"){
a <- "hitominute"
n <- round(n/3600)
}
else if (timeframe == "Hour") {
a <- "hitohour"
n <- round(n/60)
}
else {
print('Valor no válido')
return();
}
# Maximum number of points is 2000
if (n <= 2000) {
link <- paste("https://min-api.cryptocompare.com/data/", a,"?fsym=",crytocurrenty, "&tsym=", comparison,"&limit=", n, "&aggregate=1&toTs=",time, "&extraParams=your_app_name", sep = "")
data <- fromJSON(link)
df <- data.frame(
Date= as.POSIXct(data3Data$time,origin = "1970-01-01",tz = "GMT"),
priceHighest=data$Data$high,
priceLowest = data$Data$low,
priceOpen = data$Data$open,
priceClose = data$Data$close
)
}
# If the number of points is higher than the maximum we need to do a for loop
else {
# for (n in 1:10){
#
# Time <- actualTime - 3600*numberofpoint*n
# link5 <- paste("https://min-api.cryptocompare.com/data/histohour?fsym=",cripto, "&tsym=", priceToCompare,"&limit=", numberofpoint, "&aggregate=1&toTs=",Time, "&extraParams=your_app_name", sep = "")
# data5 <- fromJSON(link5)
#
# df2 <- data.frame("Date" =as.POSIXct(data5$Data$time,origin = "1970-01-01",tz = "GMT"), "Price" = data5$Data$Price )
# df <- rbind(df, df2)
# }
}
return(df)
}
a <-  crytocurrency_dataframe("day", "01/11/2018", "23/11/2018")
crytocurrency_dataframe <- function(timeframe, firstDay, lastDay, crytocurrenty = "BTC", comparison = "USD") {
# Initialitaion of the data frame with alll the desired output
df <- data.frame(
Date=as.Date(character()),
priceHighest=double(),
priceLowest = double(),
priceOpen = double(),
priceClose = double()
)
# Date
firstDay <- as.Date(firstDay,format="%dd/%mm/%YYYY")
lastDay <- as.Date(firstDay,format="%dd/%mm/%YYYY")
time <- round(as.numeric(firstDay))
# Number of points of hour dataframe
n <- as.numeric(lastDay-firstDay)
if (timeframe == "Day"){
a <- "histoday"
}
else if(timeframe == "Minute"){
a <- "hitominute"
n <- round(n/3600)
}
else if (timeframe == "Hour") {
a <- "hitohour"
n <- round(n/60)
}
else {
print('Valor no válido')
return();
}
# Maximum number of points is 2000
if (n <= 2000) {
link <- paste("https://min-api.cryptocompare.com/data/", a,"?fsym=",crytocurrenty, "&tsym=", comparison,"&limit=", n, "&aggregate=1&toTs=",time, "&extraParams=your_app_name", sep = "")
data <- fromJSON(link)
df <- data.frame(
Date= as.POSIXct(data3Data$time,origin = "1970-01-01",tz = "GMT"),
priceHighest=data$Data$high,
priceLowest = data$Data$low,
priceOpen = data$Data$open,
priceClose = data$Data$close
)
}
# If the number of points is higher than the maximum we need to do a for loop
else {
# for (n in 1:10){
#
# Time <- actualTime - 3600*numberofpoint*n
# link5 <- paste("https://min-api.cryptocompare.com/data/histohour?fsym=",cripto, "&tsym=", priceToCompare,"&limit=", numberofpoint, "&aggregate=1&toTs=",Time, "&extraParams=your_app_name", sep = "")
# data5 <- fromJSON(link5)
#
# df2 <- data.frame("Date" =as.POSIXct(data5$Data$time,origin = "1970-01-01",tz = "GMT"), "Price" = data5$Data$Price )
# df <- rbind(df, df2)
# }
}
return(df)
}
a <-  crytocurrency_dataframe("day", "01/11/2018", "23/11/2018")
debugSource('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
a <-  crytocurrency_dataframe("day", "01/11/2018", "23/11/2018")
firstDay
crytocurrency_dataframe <- function(timeframe, firstDay, lastDay, crytocurrenty = "BTC", comparison = "USD") {
# Initialitaion of the data frame with alll the desired output
df <- data.frame(
Date=as.Date(character()),
priceHighest=double(),
priceLowest = double(),
priceOpen = double(),
priceClose = double()
)
# Date
firstDay <- as.Date(firstDay,format="%d/%m/%Y")
lastDay <- as.Date(firstDay,format="%d/%m/%Y")
time <- round(as.numeric(firstDay))
# Number of points of hour dataframe
n <- as.numeric(lastDay-firstDay)
if (timeframe == "Day"){
a <- "histoday"
}
else if(timeframe == "Minute"){
a <- "hitominute"
n <- round(n/3600)
}
else if (timeframe == "Hour") {
a <- "hitohour"
n <- round(n/60)
}
else {
print('Valor no válido')
return();
}
# Maximum number of points is 2000
if (n <= 2000) {
link <- paste("https://min-api.cryptocompare.com/data/", a,"?fsym=",crytocurrenty, "&tsym=", comparison,"&limit=", n, "&aggregate=1&toTs=",time, "&extraParams=your_app_name", sep = "")
data <- fromJSON(link)
df <- data.frame(
Date= as.POSIXct(data3Data$time,origin = "1970-01-01",tz = "GMT"),
priceHighest=data$Data$high,
priceLowest = data$Data$low,
priceOpen = data$Data$open,
priceClose = data$Data$close
)
}
# If the number of points is higher than the maximum we need to do a for loop
else {
# for (n in 1:10){
#
# Time <- actualTime - 3600*numberofpoint*n
# link5 <- paste("https://min-api.cryptocompare.com/data/histohour?fsym=",cripto, "&tsym=", priceToCompare,"&limit=", numberofpoint, "&aggregate=1&toTs=",Time, "&extraParams=your_app_name", sep = "")
# data5 <- fromJSON(link5)
#
# df2 <- data.frame("Date" =as.POSIXct(data5$Data$time,origin = "1970-01-01",tz = "GMT"), "Price" = data5$Data$Price )
# df <- rbind(df, df2)
# }
}
return(df)
}
a <-  crytocurrency_dataframe("day", "01/11/2018", "23/11/2018")
debugSource('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
a <-  crytocurrency_dataframe("day", "01/11/2018", "23/11/2018")
lastDay-firstDay
debugSource('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
a <-  crytocurrency_dataframe("day", "01/11/2018", "23/11/2018")
%in% c("Day", "day")
"da" %in% c("Day", "day")
"Day" %in% c("Day", "day")
debugSource('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
a <-  crytocurrency_dataframe("day", "01/11/2018", "23/11/2018")
a <-  crytocurrency_dataframe("day", "01/11/2018", "23/11/2018")
debugSource('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
a <-  crytocurrency_dataframe("day", "01/11/2018", "23/11/2018")
debugSource('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
a <-  crytocurrency_dataframe("day", "01/11/2018", "23/11/2018")
View(df)
debugSource('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
debugSource('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
a <-  crytocurrency_dataframe("day", "01/11/2018", "23/11/2018")
time
as.numeric(Sys.time())
(Sys.time()
)
as.numeric("2018-11-24")
lastDay <- as.Date(lastDay)
as.Date.POSIXct("22/11/2018")
as.Date.POSIXct("22/11/2018", format="%d/%m/%Y")
as.Date.numeric("22/11/2018", format="%d/%m/%Y")
as.Date.numeric("22/11/2018", format="%d/%m/%Y",origin= "1970-01-01" )
debugSource('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
a <-  crytocurrency_dataframe("day", "01/11/2018", "23/11/2018")
lastDay = "22/11/2018"
lastDay1 <- as.Date(lastDay,format="%d/%m/%Y")
time <- round(as.Date.numeric(lastDay, "1970-01-01",tz = "GMT" ))
time <- round(as.Date.numeric(lastDay1, "1970-01-01",tz = "GMT" ))
time <- round(as.Date.numeric(lastDay1, "1970-01-01" ))
as.Date.POSIXlt(lastDay1)
as.numeric(lastDay1)
x <- as.POSIXct(lastDay, format="%m/%d/%Y  %H:%M:%S %p")
x
x <- as.POSIXct(lastDay, format="%m/%d/%Y")
x
x <- as.POSIXct(lastDay1, format="%m/%d/%Y")
as.numeric(x)
debugSource('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
a <-  crytocurrency_dataframe("day", "01/11/2018", "23/11/2018")
View(a)
a <-  crytocurrency_dataframe("hour", "15/11/2018", "23/11/2018")
source('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
debugSource('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
a <-  crytocurrency_dataframe("hour", "15/11/2018", "23/11/2018")
debugSource('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
a <-  crytocurrency_dataframe("hour", "15/11/2018", "23/11/2018")
a <-  crytocurrency_dataframe("hour", "15/11/2018", "23/11/2018")
function(timeframe, firstDay, lastDay, crytocurrenty = "BTC", comparison = "USD") {
# Initialitaion of the data frame with all the desired output
df <- data.frame(
Date=as.Date(character()),
priceHighest=double(),
priceLowest = double(),
priceOpen = double(),
priceClose = double()
)
# Date
firstDay <- as.Date(firstDay,format="%d/%m/%Y")
lastDay <- as.Date(lastDay,format="%d/%m/%Y")
time <- round(as.numeric(as.POSIXct(lastDay1, format="%m/%d/%Y")))
# Number of points of hour dataframe
n <- as.numeric(lastDay-firstDay)
if (timeframe %in% c("Day", "day")){
a <- "histoday"
}
else if(timeframe %in% c("Minute", "minute")){
a <- "hitominute"
n <- round(n*3600)
}
else if (timeframe %in% c("Hour", "hour")) {
a <- "hitohour"
n <- round(n*60)
}
else {
print('Valor no vÃ¡lido')
return();
}
# Maximum number of points is 2000
if (n <= 2000) {
link <- paste("https://min-api.cryptocompare.com/data/", a,"?fsym=",crytocurrenty, "&tsym=", comparison,"&limit=", n, "&aggregate=1&toTs=",time, "&extraParams=your_app_name", sep = "")
data <- fromJSON(link)
df <- data.frame(
Date= as.POSIXct(data$Data$time,origin = "1970-01-01",tz = "GMT"),
high=data$Data$high,
low = data$Data$low,
open = data$Data$open,
close = data$Data$close
)
}
# If the number of points is higher than the maximum we need to do a for loop
else {
#for (n in 1:10){
#
# Time <- actualTime - 3600*numberofpoint*n
# link5 <- paste("https://min-api.cryptocompare.com/data/histohour?fsym=",cripto, "&tsym=", priceToCompare,"&limit=", numberofpoint, "&aggregate=1&toTs=",Time, "&extraParams=your_app_name", sep = "")
# data5 <- fromJSON(link5)
#
# df2 <- data.frame("Date" =as.POSIXct(data5$Data$time,origin = "1970-01-01",tz = "GMT"), "Price" = data5$Data$Price )
# df <- rbind(df, df2)
# }
}
return(df)
}
a <-  crytocurrency_dataframe("hour", "15/11/2018", "23/11/2018")
View(data)
a <-  crytocurrency_dataframe("hour", "15/11/2018", "23/11/2018")
data$Data$time
View(data)
data$Data
data$Data$time
data$Data$close
data[["Data"]][["time"]]
View(data[["Data"]])
debugSource('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
a <-  crytocurrency_dataframe("hour", "15/11/2018", "23/11/2018")
link
debugSource('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
a <-  crytocurrency_dataframe("hour", "15/11/2018", "23/11/2018")
View(a)
a <-  crytocurrency_dataframe("hour", "8/11/2018", "23/11/2018")
a <-  crytocurrency_dataframe("hour", "01/11/2018", "23/11/2018")
View(a)
setwd("~/ThinkRProject")
write.csv(a, file = "cryto.csv",row.names=TRUE)
as.Date.POSIXlt(lastDay1)
as.numeric("2016-11-23 21:09:23 WET")
as.numeric(as.Date("2016-11-23 21:09:23 WET"))
as.numeric(as.POSIXct("2016-11-23 21:09:23 WET"))
as.numeric(as.POSIXct("2016-11-23 22:00:0 WET"))
as.numeric(as.POSIXct("2016-11-23 22:00:00 WET"))
as.numeric(as.POSIXct("2016-11-23 21:00:00 WET"))
debugSource('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
a <-  crytocurrency_dataframe("hour", "15/09/2018", "23/11/2018")
a <-  crytocurrency_dataframe("hour", "15/09/2018", "23/11/2018")
link
ceiling(1.1)
debugSource('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
a <-  crytocurrency_dataframe("hour", "15/09/2018", "23/11/2018")
View(data)
View(a)
source('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
source('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
a <-  crytocurrency_dataframe("hour", "15/09/2018", "23/11/2018")
library(dplry)
library(dplyr)
a <-  crytocurrency_dataframe("hour", "15/09/2018", "23/11/2018")
source('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
a <-  crytocurrency_dataframe("hour", "15/09/2018", "23/11/2018")
View(a)
a <-  crytocurrency_dataframe("hour", "15/09/2018", "23/11/2018")
a <-  crytocurrency_dataframe("minute", "15/09/2018", "23/11/2018")
debugSource('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
a <-  crytocurrency_dataframe("minute", "15/09/2018", "23/11/2018")
a <-  crytocurrency_dataframe("hour", "01/11/2018", "23/11/2018")
a <-  crytocurrency_dataframe("minute", "15/09/2018", "23/11/2018")
a <-  crytocurrency_dataframe("minute", "15/11/2018", "23/11/2018")
a <-  crytocurrency_dataframe("minute", "15/11/2018", "23/11/2018")
a <-  crytocurrency_dataframe("minute", "15/11/2018", "23/11/2018")
a <-  crytocurrency_dataframe("minute", "15/11/2018", "23/11/2018")
as.POSIXct(data$Data$time,origin = "1970-01-01",tz = "GMT")
data$Data$Time
link
as.Date(1542364800)
as.Date(1542364800, origin = "1970-01-01",tz = "GMT")
a <-  crytocurrency_dataframe("minute", "15/09/2018", "23/11/2018")
as.Date(1542364800, origin = "1970-01-01",tz = "GMT")
time
as.Date(time), origin = "1970-01-01",tz = "GMT")
as.Date(time, origin = "1970-01-01",tz = "GMT")
as.Date(time, origin = "1970-01-01")
as.POSIXct(1448208000, origin = "1970-01-01", tz = "UTC")
)
as.POSIXct(time, origin = "1970-01-01", tz = "UTC")
as.POSIXct(1448208000, origin = "1970-01-01", tz = "UTC")
as.POSIXct(1448208000, origin = "1970-01-01", tz = "UTC")
as.POSIXct(time, origin = "1970-01-01", tz = "UTC")
time
as.POSIXct(time, origin = "1970-01-01", tz = "UTC")
data
data$Data
a <-  crytocurrency_dataframe("minute", "15/09/2018", "23/11/2018")
debugSource('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
a <-  crytocurrency_dataframe("minute", "15/09/2018", "23/11/2018")
2000*60
link
link <- "https://min-api.cryptocompare.com/data/histominute?fsym=BTC&tsym=USD&limit=2000&aggregate=1&toTs=1542364800&extraParams=your_app_name"
data <- fromJSON(link)
View(data)
data$Data$time
data$Data$Time
data[["Data"]][["time"]]
link <- "https://min-api.cryptocompare.com/data/histominute?fsym=BTC&tsym=USD&limit=2000&aggregate=1&toTs=1542364800&extraParams=your_app_name"
data2 <- fromJSON(link1)
data2 <- fromJSON(link)
data2
a <-  crytocurrency_dataframe("hour", "15/09/2016", "23/11/2016")
Sys.time()
Sys.time()-7
Sys.time()-days(7)
Sys.time()-as.difftime(2, unit="days")(7)
Sys.time()-as.difftime(2, unit="days")
lastDau
lastDay
as.POSIXct(firstDay,origin = "1970-01-01",tz = "GMT")lastDay
as.POSIXct(firstDay,origin = "1970-01-01",tz = "GMT")
as.POSIXct(lastDay,origin = "1970-01-01",tz = "GMT")
as.numeric(as.POSIXct(lastDay,origin = "1970-01-01",tz = "GMT"))
as.numeric(lastDay,origin = "1970-01-01",tz = "GMT")
View(a)
debugSource('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
a <-  crytocurrency_dataframe("hour", "15/09/2016", "23/11/2016")
View(a)
source('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
View(a)
View(a)
a <-  crytocurrency_dataframe("hour", "15/09/2016", "23/11/2016")
View(a)
debugSource('~/ThinkRProject/crypto_dataset_day_month.R')
debugSource('~/ThinkRProject/crypto_dataset_day_month.R')
a <-  crypto_dataset_day_month("hour", "15/09/2016", "23/11/2016")
View(dataVolume)
a <-  crytocurrency_dataframe("hour", "15/09/2016", "23/11/2016")
source('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
source('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
source('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
source('~/ThinkRProject/crytocurrency_dataframe.R', encoding = 'UTF-8')
a <-  crypto_dataset_day_month("hour", "15/09/2016", "23/11/2016")
a <-  crypto_dataset_day_month("hour", "15/09/2016", "23/11/2016")
debugSource('~/ThinkRProject/crypto_dataset_day_month.R')
a <-  crypto_dataset_day_month("hour", "15/09/2016", "23/11/2016")
a <-  crypto_dataset_day_month("hour", "15/09/2016", "23/11/2016")
debugSource('~/ThinkRProject/crypto_dataset_day_month.R')
a <-  crypto_dataset_day_month("hour", "15/09/2016", "23/11/2016")
a <-  crypto_dataset_day_month("hour", "15/09/2016", "23/11/2016")
